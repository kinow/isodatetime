# Configuration for running isodatetime tests on Travis CI
# See https://travis-ci.org/ for more info.

---
language: python

python:
  - 3.4
  - 3.5
  - 3.6
  - 3.7-dev
env:
  - RUN_COVERAGE=false
  - RUN_COVERAGE=true

matrix:
  fast_finish: true
  exclude:
    - python: 3.4
      env: RUN_COVERAGE=true
    - python: 3.5
      env: RUN_COVERAGE=true
    - python: 3.6
      env: RUN_COVERAGE=false
    - python: 3.7-dev
      env: RUN_COVERAGE=true

before_install:
  # Upgrade pip and setuptools as some times the versioning scheme hack fails
  # in Travis-CI.
  - pip install --upgrade pip setuptools
  # Coverage dependencies, coverage for reporting coverage, pytest-cov to
  # enable PyTest to produce coverage reports, and pytest-env to allow
  # PyTest to use environment variables in its configuration (e.g. TZ=UTC).
  - pip install coverage pytest-cov pytest-env pytest-runner
  # Code style dependencies
  - pip install pycodestyle
  # Python 3.4 needs typing, as it was released with Python 3.5
  - pip install typing
before_script:
  - pycodestyle -v isodatetime
script:
  - |
    export COVERAGE_PROCESS_START="${TRAVIS_BUILD_DIR}/.coveragerc"
    export COVERAGE_FILE="${TRAVIS_BUILD_DIR}/.coverage"
    # NOTE: the way to handle long-living commands in the documentation is
    # travis_wait 40 coverage run -m isodatetime.tests.test_time_point
    # but it does not produce any output, which can be frustrating in case of errors.
    # So here we are using the approach documented in the issue
    # https://github.com/travis-ci/travis-ci/issues/4190.
    coverage run setup.py test --pytest-args='--runslow' &
    TEST_PID="$!"
    minutes=0
    limit=50
    while ps -p "${TEST_PID}" >/dev/null 2>&1; do
      echo -n -e " \b" # never leave evidences!
      if ((minutes == limit)); then
        exit 1
      fi
      minutes=$((minutes + 1))
      sleep 60
    done
    wait "${TEST_PID}"
after_success:
  - coverage xml --ignore-errors
  # Report metrics, such as coverage
  - '"${RUN_COVERAGE:-false}" && bash <(curl -s https://codecov.io/bash)'
